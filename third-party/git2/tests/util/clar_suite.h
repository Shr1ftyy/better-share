#ifndef _____clar_suite_h_____
#define _____clar_suite_h_____
extern void test_alloc__oom(void);
extern void test_alloc__single_byte_is_exhausted(void);
extern void test_alloc__free_replenishes_byte(void);
extern void test_alloc__realloc(void);
extern void test_alloc__cleanup(void);
extern void test_array__bsearch2(void);
extern void test_assert__argument(void);
extern void test_assert__argument_with_non_int_return_type(void);
extern void test_assert__argument_with_void_return_type(void);
extern void test_assert__internal(void);
extern void test_assert__with_cleanup(void);
extern void test_bitvec__0(void);
extern void test_copy__file(void);
extern void test_copy__file_in_dir(void);
extern void test_copy__tree(void);
extern void test_dirent__dont_traverse_dot(void);
extern void test_dirent__traverse_subfolder(void);
extern void test_dirent__traverse_slash_terminated_folder(void);
extern void test_dirent__dont_traverse_empty_folders(void);
extern void test_dirent__traverse_weird_filenames(void);
extern void test_dirent__length_limits(void);
extern void test_dirent__empty_dir(void);
extern void test_dirent__diriter_with_fullname(void);
extern void test_dirent__diriter_at_directory_root(void);
extern void test_encoding__decode(void);
extern void test_encoding__encode(void);
extern void test_errors__public_api(void);
extern void test_errors__new_school(void);
extern void test_errors__restore(void);
extern void test_errors__restore_oom(void);
extern void test_errors__integer_overflow_alloc_multiply(void);
extern void test_errors__integer_overflow_alloc_add(void);
extern void test_errors__integer_overflow_sets_oom(void);
extern void test_filebuf__0(void);
extern void test_filebuf__1(void);
extern void test_filebuf__2(void);
extern void test_filebuf__4(void);
extern void test_filebuf__5(void);
extern void test_filebuf__umask(void);
extern void test_filebuf__rename_error(void);
extern void test_filebuf__symlink_follow(void);
extern void test_filebuf__symlink_follow_absolute_paths(void);
extern void test_filebuf__symlink_depth(void);
extern void test_filebuf__hidden_file(void);
extern void test_filebuf__detects_directory(void);
extern void test_ftruncate__2gb(void);
extern void test_ftruncate__4gb(void);
extern void test_ftruncate__initialize(void);
extern void test_ftruncate__cleanup(void);
extern void test_futils__writebuffer(void);
extern void test_futils__write_hidden_file(void);
extern void test_futils__recursive_rmdir_keeps_symlink_targets(void);
extern void test_futils__mktmp_umask(void);
extern void test_futils__initialize(void);
extern void test_futils__cleanup(void);
extern void test_gitstr__0(void);
extern void test_gitstr__1(void);
extern void test_gitstr__2(void);
extern void test_gitstr__3(void);
extern void test_gitstr__4(void);
extern void test_gitstr__5(void);
extern void test_gitstr__6(void);
extern void test_gitstr__7(void);
extern void test_gitstr__8(void);
extern void test_gitstr__9(void);
extern void test_gitstr__10(void);
extern void test_gitstr__join3(void);
extern void test_gitstr__11(void);
extern void test_gitstr__rfind_variants(void);
extern void test_gitstr__puts_escaped(void);
extern void test_gitstr__unescape(void);
extern void test_gitstr__encode_base64(void);
extern void test_gitstr__decode_base64(void);
extern void test_gitstr__encode_base85(void);
extern void test_gitstr__decode_base85(void);
extern void test_gitstr__decode_base85_fails_gracefully(void);
extern void test_gitstr__classify_with_utf8(void);
extern void test_gitstr__lf_and_crlf_conversions(void);
extern void test_gitstr__dont_grow_borrowed(void);
extern void test_gitstr__dont_hit_infinite_loop_when_resizing(void);
extern void test_gitstr__avoid_printing_into_oom_buffer(void);
extern void test_hex__fromhex(void);
extern void test_hostname__matches_cert(void);
extern void test_iconv__unchanged(void);
extern void test_iconv__decomposed_to_precomposed(void);
extern void test_iconv__precomposed_is_unmodified(void);
extern void test_iconv__initialize(void);
extern void test_iconv__cleanup(void);
extern void test_init__returns_count(void);
extern void test_init__reinit_succeeds(void);
extern void test_init__concurrent_init_succeeds(void);
extern void test_integer__multiply_int64_no_overflow(void);
extern void test_integer__multiply_int64_overflow(void);
extern void test_integer__multiply_int64_edge_cases(void);
extern void test_link__stat_regular_file(void);
extern void test_link__lstat_regular_file(void);
extern void test_link__stat_symlink(void);
extern void test_link__stat_symlink_directory(void);
extern void test_link__stat_symlink_chain(void);
extern void test_link__stat_dangling_symlink(void);
extern void test_link__stat_dangling_symlink_directory(void);
extern void test_link__lstat_symlink(void);
extern void test_link__lstat_symlink_directory(void);
extern void test_link__lstat_dangling_symlink(void);
extern void test_link__lstat_dangling_symlink_directory(void);
extern void test_link__stat_junction(void);
extern void test_link__stat_dangling_junction(void);
extern void test_link__lstat_junction(void);
extern void test_link__lstat_dangling_junction(void);
extern void test_link__stat_hardlink(void);
extern void test_link__lstat_hardlink(void);
extern void test_link__stat_reparse_point(void);
extern void test_link__lstat_reparse_point(void);
extern void test_link__readlink_nonexistent_file(void);
extern void test_link__readlink_normal_file(void);
extern void test_link__readlink_symlink(void);
extern void test_link__readlink_dangling(void);
extern void test_link__readlink_multiple(void);
extern void test_link__cleanup(void);
extern void test_memmem__found(void);
extern void test_memmem__absent(void);
extern void test_memmem__edgecases(void);
extern void test_mkdir__absolute(void);
extern void test_mkdir__basic(void);
extern void test_mkdir__with_base(void);
extern void test_mkdir__chmods(void);
extern void test_mkdir__keeps_parent_symlinks(void);
extern void test_mkdir__mkdir_path_inside_unwriteable_parent(void);
extern void test_path_core__00_dirname(void);
extern void test_path_core__01_basename(void);
extern void test_path_core__05_joins(void);
extern void test_path_core__06_long_joins(void);
extern void test_path_core__07_path_to_dir(void);
extern void test_path_core__08_self_join(void);
extern void test_path_core__09_percent_decode(void);
extern void test_path_core__10_fromurl(void);
extern void test_path_core__11_walkup(void);
extern void test_path_core__11a_walkup_cancel(void);
extern void test_path_core__12_offset_to_path_root(void);
extern void test_path_core__13_cannot_prettify_a_non_existing_file(void);
extern void test_path_core__14_apply_relative(void);
extern void test_path_core__15_resolve_relative(void);
extern void test_path_core__16_resolve_relative(void);
extern void test_path_core__find_exe_in_path(void);
extern void test_path_core__validate_current_user_ownership(void);
extern void test_path_core__dirlen(void);
extern void test_path_core__make_relative(void);
extern void test_path_core__isvalid_standard(void);
extern void test_path_core__isvalid_standard_str(void);
extern void test_path_core__isvalid_empty_dir_component(void);
extern void test_path_core__isvalid_dot_and_dotdot(void);
extern void test_path_core__isvalid_backslash(void);
extern void test_path_core__isvalid_trailing_dot(void);
extern void test_path_core__isvalid_trailing_space(void);
extern void test_path_core__isvalid_trailing_colon(void);
extern void test_path_core__isvalid_dos_paths(void);
extern void test_path_core__isvalid_dos_paths_withnum(void);
extern void test_path_core__isvalid_nt_chars(void);
extern void test_path_core__join_unrooted(void);
extern void test_path_core__join_unrooted_respects_funny_windows_roots(void);
extern void test_path_core__is_root(void);
extern void test_path_core__initialize(void);
extern void test_path_core__cleanup(void);
extern void test_path_win32__utf8_to_utf16(void);
extern void test_path_win32__removes_trailing_slash(void);
extern void test_path_win32__squashes_multiple_slashes(void);
extern void test_path_win32__unc(void);
extern void test_path_win32__honors_max_path(void);
extern void test_path_win32__dot_and_dotdot(void);
extern void test_path_win32__absolute_from_no_drive_letter(void);
extern void test_path_win32__absolute_from_relative(void);
extern void test_path_win32__keeps_relative(void);
extern void test_path_win32__remove_namespace(void);
extern void test_path_win32__canonicalize(void);
extern void test_path_win32__8dot3_name(void);
extern void test_path_win32__realpath(void);
extern void test_pool__0(void);
extern void test_pool__1(void);
extern void test_pool__strndup_limit(void);
extern void test_posix__inet_pton(void);
extern void test_posix__utimes(void);
extern void test_posix__unlink_removes_symlink(void);
extern void test_posix__symlink_resolves_to_correct_type(void);
extern void test_posix__relative_symlink(void);
extern void test_posix__symlink_to_file_across_dirs(void);
extern void test_posix__initialize(void);
extern void test_pqueue__items_are_put_in_order(void);
extern void test_pqueue__interleave_inserts_and_pops(void);
extern void test_pqueue__max_heap_size(void);
extern void test_pqueue__max_heap_size_without_comparison(void);
extern void test_pqueue__interleaved_pushes_and_pops(void);
extern void test_process_env__can_add_env(void);
extern void test_process_env__can_propagate_env(void);
extern void test_process_env__can_remove_env(void);
extern void test_process_env__can_clear_env(void);
extern void test_process_env__initialize(void);
extern void test_process_env__cleanup(void);
extern void test_process_start__returncode(void);
extern void test_process_start__not_found(void);
extern void test_process_start__redirect_stdio(void);
extern void test_process_start__can_chdir(void);
extern void test_process_start__cannot_chdir_to_nonexistent_dir(void);
extern void test_process_start__initialize(void);
extern void test_process_start__cleanup(void);
extern void test_process_win32__cmdline_is_whitespace_delimited(void);
extern void test_process_win32__cmdline_escapes_whitespace(void);
extern void test_process_win32__cmdline_escapes_quotes(void);
extern void test_process_win32__cmdline_escapes_backslash(void);
extern void test_qsort__array_with_single_entry(void);
extern void test_qsort__array_with_equal_entries(void);
extern void test_qsort__sorted_array(void);
extern void test_qsort__unsorted_array(void);
extern void test_qsort__sorting_strings(void);
extern void test_qsort__sorting_big_entries(void);
extern void test_regexp__compile_ignores_global_locale_ctype(void);
extern void test_regexp__compile_ignores_global_locale_collate(void);
extern void test_regexp__regex_matches_digits_with_locale(void);
extern void test_regexp__regex_matches_alphabet_with_locale(void);
extern void test_regexp__simple_search_matches(void);
extern void test_regexp__case_insensitive_search_matches(void);
extern void test_regexp__nonmatching_search_returns_error(void);
extern void test_regexp__search_finds_complete_match(void);
extern void test_regexp__search_finds_correct_offsets(void);
extern void test_regexp__search_finds_empty_group(void);
extern void test_regexp__search_fills_matches_with_first_matching_groups(void);
extern void test_regexp__search_skips_nonmatching_group(void);
extern void test_regexp__search_initializes_trailing_nonmatching_groups(void);
extern void test_regexp__initialize(void);
extern void test_regexp__cleanup(void);
extern void test_rmdir__delete_recursive(void);
extern void test_rmdir__fail_to_delete_non_empty_dir(void);
extern void test_rmdir__keep_base(void);
extern void test_rmdir__can_skip_non_empty_dir(void);
extern void test_rmdir__can_remove_empty_parents(void);
extern void test_rmdir__initialize(void);
extern void test_rmdir__cleanup(void);
extern void test_sha1__sum(void);
extern void test_sha1__detect_collision_attack(void);
extern void test_sha1__win32_providers(void);
extern void test_sha1__initialize(void);
extern void test_sha1__cleanup(void);
extern void test_sha256__empty(void);
extern void test_sha256__hello(void);
extern void test_sha256__pdf(void);
extern void test_sha256__win32_providers(void);
extern void test_sha256__initialize(void);
extern void test_sha256__cleanup(void);
extern void test_sortedcache__name_only(void);
extern void test_sortedcache__in_memory(void);
extern void test_sortedcache__on_disk(void);
extern void test_stat__0(void);
extern void test_stat__root(void);
extern void test_stat__initialize(void);
extern void test_stat__cleanup(void);
extern void test_str_basic__resize(void);
extern void test_str_basic__resize_incremental(void);
extern void test_str_basic__printf(void);
extern void test_str_oom__grow(void);
extern void test_str_oom__grow_by(void);
extern void test_str_oom__allocation_failure(void);
extern void test_str_oom__initialize(void);
extern void test_str_oom__cleanup(void);
extern void test_str_percent__decode_succeeds(void);
extern void test_str_percent__ignores_invalid(void);
extern void test_str_quote__quote_succeeds(void);
extern void test_str_quote__unquote_succeeds(void);
extern void test_str_quote__unquote_fails(void);
extern void test_str_splice__preprend(void);
extern void test_str_splice__append(void);
extern void test_str_splice__insert_at(void);
extern void test_str_splice__remove_at(void);
extern void test_str_splice__replace(void);
extern void test_str_splice__replace_with_longer(void);
extern void test_str_splice__replace_with_shorter(void);
extern void test_str_splice__truncate(void);
extern void test_str_splice__dont_do_anything(void);
extern void test_str_splice__initialize(void);
extern void test_str_splice__cleanup(void);
extern void test_string__0(void);
extern void test_string__1(void);
extern void test_string__2(void);
extern void test_string__prefixncmp(void);
extern void test_string__prefixncmp_icase(void);
extern void test_string__strcmp(void);
extern void test_string__strcasecmp(void);
extern void test_string__strlcmp(void);
extern void test_strmap__0(void);
extern void test_strmap__inserted_strings_can_be_retrieved(void);
extern void test_strmap__deleted_entry_cannot_be_retrieved(void);
extern void test_strmap__inserting_many_keys_succeeds(void);
extern void test_strmap__get_succeeds_with_existing_entries(void);
extern void test_strmap__get_returns_null_on_nonexisting_key(void);
extern void test_strmap__set_persists_key(void);
extern void test_strmap__set_persists_multpile_keys(void);
extern void test_strmap__set_updates_existing_key(void);
extern void test_strmap__iteration(void);
extern void test_strmap__iterating_empty_map_stops_immediately(void);
extern void test_strmap__initialize(void);
extern void test_strmap__cleanup(void);
extern void test_strtol__int32(void);
extern void test_strtol__int64(void);
extern void test_strtol__base_autodetection(void);
extern void test_strtol__buffer_length_with_autodetection_truncates(void);
extern void test_strtol__buffer_length_truncates(void);
extern void test_strtol__buffer_length_with_leading_ws_truncates(void);
extern void test_strtol__buffer_length_with_leading_sign_truncates(void);
extern void test_strtol__error_message_cuts_off(void);
extern void test_url_http__has_scheme(void);
extern void test_url_http__no_scheme(void);
extern void test_url_http__hostname_root(void);
extern void test_url_http__hostname_implied_root(void);
extern void test_url_http__hostname_numeric(void);
extern void test_url_http__hostname_implied_root_custom_port(void);
extern void test_url_http__hostname_implied_root_empty_port(void);
extern void test_url_http__hostname_encoded_password(void);
extern void test_url_http__hostname_user(void);
extern void test_url_http__hostname_user_pass(void);
extern void test_url_http__hostname_port(void);
extern void test_url_http__hostname_empty_port(void);
extern void test_url_http__hostname_user_port(void);
extern void test_url_http__hostname_user_pass_port(void);
extern void test_url_http__hostname_user_pass_port_query(void);
extern void test_url_http__hostname_user_pass_port_fragment(void);
extern void test_url_http__hostname_user_pass_port_query_fragment(void);
extern void test_url_http__fragment_with_question_mark(void);
extern void test_url_http__ipv4_trivial(void);
extern void test_url_http__ipv4_root(void);
extern void test_url_http__ipv4_implied_root(void);
extern void test_url_http__ipv4_implied_root_custom_port(void);
extern void test_url_http__ipv4_implied_root_empty_port(void);
extern void test_url_http__ipv4_encoded_password(void);
extern void test_url_http__ipv4_user(void);
extern void test_url_http__ipv4_user_pass(void);
extern void test_url_http__ipv4_port(void);
extern void test_url_http__ipv4_empty_port(void);
extern void test_url_http__ipv4_user_port(void);
extern void test_url_http__ipv4_user_pass_port(void);
extern void test_url_http__ipv6_trivial(void);
extern void test_url_http__ipv6_root(void);
extern void test_url_http__ipv6_implied_root(void);
extern void test_url_http__ipv6_implied_root_custom_port(void);
extern void test_url_http__ipv6_implied_root_empty_port(void);
extern void test_url_http__ipv6_encoded_password(void);
extern void test_url_http__ipv6_user(void);
extern void test_url_http__ipv6_user_pass(void);
extern void test_url_http__ipv6_port(void);
extern void test_url_http__ipv6_empty_port(void);
extern void test_url_http__ipv6_user_port(void);
extern void test_url_http__ipv6_user_pass_port(void);
extern void test_url_http__ipv6_invalid_addresses(void);
extern void test_url_http__invalid_scheme_is_relative(void);
extern void test_url_http__scheme_case_is_normalized(void);
extern void test_url_http__no_scheme_relative_path(void);
extern void test_url_http__no_scheme_absolute_path(void);
extern void test_url_http__empty_path_with_empty_authority(void);
extern void test_url_http__spaces_in_the_name(void);
extern void test_url_http__initialize(void);
extern void test_url_http__cleanup(void);
extern void test_url_joinpath__target_paths_and_queries(void);
extern void test_url_joinpath__source_query_removed(void);
extern void test_url_joinpath__source_lacks_path(void);
extern void test_url_joinpath__source_is_slash(void);
extern void test_url_joinpath__source_has_query(void);
extern void test_url_joinpath__empty_query_ignored(void);
extern void test_url_joinpath__initialize(void);
extern void test_url_joinpath__cleanup(void);
extern void test_url_parse__hostname_trivial(void);
extern void test_url_parse__hostname_root(void);
extern void test_url_parse__hostname_implied_root(void);
extern void test_url_parse__hostname_numeric(void);
extern void test_url_parse__hostname_implied_root_custom_port(void);
extern void test_url_parse__specified_default_port(void);
extern void test_url_parse__hostname_implied_root_empty_port(void);
extern void test_url_parse__hostname_encoded_password(void);
extern void test_url_parse__hostname_user(void);
extern void test_url_parse__hostname_user_pass(void);
extern void test_url_parse__hostname_port(void);
extern void test_url_parse__hostname_empty_port(void);
extern void test_url_parse__hostname_user_port(void);
extern void test_url_parse__hostname_user_pass_port(void);
extern void test_url_parse__hostname_user_pass_port_query(void);
extern void test_url_parse__hostname_user_pass_port_fragment(void);
extern void test_url_parse__hostname_user_pass_port_query_fragment(void);
extern void test_url_parse__fragment_with_question_mark(void);
extern void test_url_parse__ipv4_trivial(void);
extern void test_url_parse__ipv4_root(void);
extern void test_url_parse__ipv4_implied_root(void);
extern void test_url_parse__ipv4_implied_root_custom_port(void);
extern void test_url_parse__ipv4_implied_root_empty_port(void);
extern void test_url_parse__ipv4_encoded_password(void);
extern void test_url_parse__ipv4_user(void);
extern void test_url_parse__ipv4_user_pass(void);
extern void test_url_parse__ipv4_port(void);
extern void test_url_parse__ipv4_empty_port(void);
extern void test_url_parse__ipv4_user_port(void);
extern void test_url_parse__ipv4_user_pass_port(void);
extern void test_url_parse__ipv6_trivial(void);
extern void test_url_parse__ipv6_root(void);
extern void test_url_parse__ipv6_implied_root(void);
extern void test_url_parse__ipv6_implied_root_custom_port(void);
extern void test_url_parse__ipv6_implied_root_empty_port(void);
extern void test_url_parse__ipv6_encoded_password(void);
extern void test_url_parse__ipv6_user(void);
extern void test_url_parse__ipv6_user_pass(void);
extern void test_url_parse__ipv6_port(void);
extern void test_url_parse__ipv6_empty_port(void);
extern void test_url_parse__ipv6_user_port(void);
extern void test_url_parse__ipv6_user_pass_port(void);
extern void test_url_parse__ipv6_invalid_addresses(void);
extern void test_url_parse__empty_scheme(void);
extern void test_url_parse__invalid_scheme_is_relative(void);
extern void test_url_parse__scheme_case_is_normalized(void);
extern void test_url_parse__nonhierarchical_scheme(void);
extern void test_url_parse__no_scheme_relative_path(void);
extern void test_url_parse__no_scheme_absolute_path(void);
extern void test_url_parse__empty_path(void);
extern void test_url_parse__empty_path_with_empty_authority(void);
extern void test_url_parse__http_follows_the_rfc(void);
extern void test_url_parse__ssh_from_terrible_google_rfc_violating_products(void);
extern void test_url_parse__ssh_with_password_from_terrible_google_rfc_violating_products(void);
extern void test_url_parse__spaces_in_the_name(void);
extern void test_url_parse__initialize(void);
extern void test_url_parse__cleanup(void);
extern void test_url_pattern__single(void);
extern void test_url_pattern__list(void);
extern void test_url_redirect__redirect_http(void);
extern void test_url_redirect__redirect_ssl(void);
extern void test_url_redirect__redirect_leaves_root_path(void);
extern void test_url_redirect__redirect_encoded_username_password(void);
extern void test_url_redirect__redirect_cross_host_allowed(void);
extern void test_url_redirect__redirect_cross_host_denied(void);
extern void test_url_redirect__redirect_http_downgrade_denied(void);
extern void test_url_redirect__redirect_relative(void);
extern void test_url_redirect__redirect_relative_ssl(void);
extern void test_url_redirect__service_query_no_query_params_in_location(void);
extern void test_url_redirect__service_query_with_query_params_in_location(void);
extern void test_url_redirect__initialize(void);
extern void test_url_redirect__cleanup(void);
extern void test_url_scp__hostname_trivial(void);
extern void test_url_scp__hostname_bracketed(void);
extern void test_url_scp__hostname_root(void);
extern void test_url_scp__hostname_user(void);
extern void test_url_scp__hostname_user_bracketed(void);
extern void test_url_scp__hostname_port(void);
extern void test_url_scp__hostname_specified_default_port(void);
extern void test_url_scp__hostname_user_port(void);
extern void test_url_scp__ipv4_trivial(void);
extern void test_url_scp__ipv4_bracketed(void);
extern void test_url_scp__ipv4_user(void);
extern void test_url_scp__ipv4_port(void);
extern void test_url_scp__ipv4_user_port(void);
extern void test_url_scp__ipv6_trivial(void);
extern void test_url_scp__ipv6_user(void);
extern void test_url_scp__ipv6_port(void);
extern void test_url_scp__ipv6_user_port(void);
extern void test_url_scp__hexhost_and_port(void);
extern void test_url_scp__malformed_ipv6_one(void);
extern void test_url_scp__malformed_ipv6_two(void);
extern void test_url_scp__malformed_ipv6_with_user(void);
extern void test_url_scp__invalid_addresses(void);
extern void test_url_scp__initialize(void);
extern void test_url_scp__cleanup(void);
extern void test_url_valid__test(void);
extern void test_utf8__char_length(void);
extern void test_vector__0(void);
extern void test_vector__1(void);
extern void test_vector__2(void);
extern void test_vector__3(void);
extern void test_vector__4(void);
extern void test_vector__5(void);
extern void test_vector__remove_matching(void);
extern void test_vector__grow_and_shrink(void);
extern void test_vector__reverse(void);
extern void test_vector__dup_empty_vector(void);
extern void test_wildmatch__basic_wildmatch(void);
extern void test_wildmatch__slash_matching_features(void);
extern void test_wildmatch__various_additional(void);
extern void test_wildmatch__character_classes(void);
extern void test_wildmatch__additional_with_malformed(void);
extern void test_wildmatch__recursion(void);
extern void test_wildmatch__pathmatch(void);
extern void test_wildmatch__case_sensitivity(void);
extern void test_zstream__basic(void);
extern void test_zstream__fails_on_trailing_garbage(void);
extern void test_zstream__buffer(void);
extern void test_zstream__big_data(void);
#endif
